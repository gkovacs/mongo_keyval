// Generated by LiveScript 1.3.1
(function(){
  var mongodb, MongoClient, Grid, mongohq, mongolab, mongosoup, getmongourl, getMongoDb, getVarsCollection, get, set;
  mongodb = require('mongodb');
  MongoClient = mongodb.MongoClient, Grid = mongodb.Grid;
  mongohq = process.env.MONGOHQ_URL;
  mongolab = process.env.MONGOLAB_URI;
  mongosoup = process.env.MONGOSOUP_URL;
  getmongourl = function(){
    if ((typeof module != 'undefined' && module !== null) && module.exports != null && module.exports.mongourl != null) {
      return module.exports.mongourl;
    }
    return mongohq != null
      ? mongohq
      : mongolab != null
        ? mongolab
        : mongosoup != null ? mongosoup : 'mongodb://localhost:27017/default';
  };
  getMongoDb = function(callback){
    return MongoClient.connect(getmongourl(), function(err, db){
      if (err) {
        return console.log('error getting mongodb');
      } else {
        return callback(db);
      }
    });
  };
  getVarsCollection = function(callback){
    return getMongoDb(function(db){
      return callback(db.collection('vars'), db);
    });
  };
  get = function(varname, callback){
    return getVarsCollection(function(varsCollection, db){
      return varsCollection.findOne({
        _id: varname
      }, function(err, result){
        if (result == null || result.val == null) {
          callback(null);
          db.close();
          return;
        }
        callback(JSON.parse(result.val));
        return db.close();
      });
    });
  };
  set = function(varname, val, callback){
    return getVarsCollection(function(varsCollection, db){
      return varsCollection.save({
        _id: varname,
        name: varname,
        val: JSON.stringify(val)
      }, function(err, result){
        if (callback != null) {
          callback(val);
        }
        return db.close();
      });
    });
  };
  if ((typeof module != 'undefined' && module !== null) && module.exports != null) {
    module.exports = {
      get: get,
      set: set
    };
  }
}).call(this);
